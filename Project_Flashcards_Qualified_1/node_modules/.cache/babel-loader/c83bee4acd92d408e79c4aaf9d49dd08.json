{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcdow\\\\Thinkful\\\\Flashcard-o-matic\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\DeckStudy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api/index\";\nimport Breadcrumb from \"../Comp/BreadCrumb\";\nimport Card from \"../card/Card\";\nimport NotEnoughCards from \"../error/NotEnoughCards\";\nimport PropTypes from \"prop-types\";\n/**\r\n * A DeckStudy component will run through the cards in a deck object.\r\n * @param {AbortController} props.abortController - AbortController.\r\n * @returns {ReactElement} JSX for a DeckPreview component.\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckStudy({\n  abortController\n}) {\n  _s();\n\n  const [cardNum, setCardNum] = useState(0);\n  const [flipped, setFlipped] = useState(false);\n  const history = useHistory();\n  const [deck, setDeck] = useState({});\n  const {\n    deckId\n  } = useParams(); // get deck when first rendered.\n\n  useEffect(() => {\n    getDeck();\n    return () => {\n      abortController.abort();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  /**\r\n   * Fetches the current deck from the database.\r\n   */\n\n  async function getDeck() {\n    try {\n      const response = await readDeck(deckId, abortController.signal);\n      setDeck(response);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  if (Object.keys(deck).length === 0) return null;\n  if (!deck) return null;\n  /**\r\n   * Flips the current card.\r\n   */\n\n  function flip() {\n    setFlipped(!flipped);\n  }\n  /**\r\n   * Goes to the next card, or prompts the user to go through the deck again.\r\n   */\n\n\n  function next() {\n    if (cardNum + 1 === deck.cards.length) {\n      if (window.confirm(`Restart cards?\\n\\nClick 'cancel' to return to the home page.`)) {\n        setCardNum(0);\n      } else {\n        history.push(\"/\");\n      }\n    } else {\n      setCardNum(cardNum + 1);\n    }\n\n    setFlipped(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: `deck-${deck.id}-study`,\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      deckName: deck.name,\n      deckId: deck.id,\n      page: \"study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Study: \", deck.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), deck.cards.length > 2 ? /*#__PURE__*/_jsxDEV(Card, {\n      deck: deck,\n      cardNum: cardNum,\n      flipped: flipped,\n      flip: flip,\n      next: next\n    }, deck.cards[cardNum].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(NotEnoughCards, {\n      length: deck.cards.length,\n      id: deck.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n}\n\n_s(DeckStudy, \"uc5kOH7g6Adv7MAvYdRkaNxwWVo=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = DeckStudy;\nDeckStudy.propTypes = {\n  abortController: PropTypes.instanceOf(AbortController).isRequired\n};\nexport default DeckStudy;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckStudy\");","map":{"version":3,"sources":["C:/Users/mcdow/Thinkful/Flashcard-o-matic/Project_Flashcards_Qualified_1/src/Layout/Deck/DeckStudy.js"],"names":["React","useState","useEffect","useHistory","useParams","readDeck","Breadcrumb","Card","NotEnoughCards","PropTypes","DeckStudy","abortController","cardNum","setCardNum","flipped","setFlipped","history","deck","setDeck","deckId","getDeck","abort","response","signal","error","name","Object","keys","length","flip","next","cards","window","confirm","push","id","propTypes","instanceOf","AbortController","isRequired"],"mappings":"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","sourcesContent":["  \r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api/index\";\r\nimport Breadcrumb from \"../Comp/BreadCrumb\";\r\nimport Card from \"../card/Card\";\r\nimport NotEnoughCards from \"../error/NotEnoughCards\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * A DeckStudy component will run through the cards in a deck object.\r\n * @param {AbortController} props.abortController - AbortController.\r\n * @returns {ReactElement} JSX for a DeckPreview component.\r\n */\r\nfunction DeckStudy({ abortController }) {\r\n\tconst [cardNum, setCardNum] = useState(0);\r\n\tconst [flipped, setFlipped] = useState(false);\r\n\tconst history = useHistory();\r\n\tconst [deck, setDeck] = useState({});\r\n\tconst { deckId } = useParams();\r\n\r\n\t// get deck when first rendered.\r\n\tuseEffect(() => {\r\n\t\tgetDeck();\r\n\r\n\t\treturn () => {\r\n\t\t\tabortController.abort();\r\n\t\t};\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\t\r\n\t/**\r\n\t * Fetches the current deck from the database.\r\n\t */\r\n\tasync function getDeck() {\r\n\t\ttry {\r\n\t\t\tconst response = await readDeck(deckId, abortController.signal);\r\n\t\t\tsetDeck(response);\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tif(error.name !== \"AbortError\") {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(Object.keys(deck).length === 0) return null;\r\n\r\n\tif(!deck) return null;\r\n\r\n\t/**\r\n\t * Flips the current card.\r\n\t */\r\n\tfunction flip() {\r\n\t\tsetFlipped(!flipped);\r\n\t}\r\n\r\n\t/**\r\n\t * Goes to the next card, or prompts the user to go through the deck again.\r\n\t */\r\n\tfunction next() {\r\n\t\tif(cardNum + 1 === deck.cards.length) {\r\n\t\t\tif(window.confirm(`Restart cards?\\n\\nClick 'cancel' to return to the home page.`)) {\r\n\t\t\t\tsetCardNum(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thistory.push(\"/\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetCardNum(cardNum + 1);\r\n\t\t}\r\n\t\tsetFlipped(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id={`deck-${deck.id}-study`}>\r\n\t\t\t<Breadcrumb deckName={deck.name} deckId={deck.id} page=\"study\" />\r\n\t\t\t<h1>Study: {deck.name}</h1>\r\n\r\n\t\t\t{deck.cards.length > 2 ?\r\n\t\t\t\t<Card \r\n\t\t\t\t\tkey={deck.cards[cardNum].id} \r\n\t\t\t\t\tdeck={deck} \r\n\t\t\t\t\tcardNum={cardNum} \r\n\t\t\t\t\tflipped={flipped} \r\n\t\t\t\t\tflip={flip}\r\n\t\t\t\t\tnext={next}\r\n\t\t\t\t/> :\r\n\t\t\t\t<NotEnoughCards length={deck.cards.length} id={deck.id} />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nDeckStudy.propTypes = {\r\n\tabortController: PropTypes.instanceOf(AbortController).isRequired,\r\n};\r\n\r\nexport default DeckStudy;"]},"metadata":{},"sourceType":"module"}